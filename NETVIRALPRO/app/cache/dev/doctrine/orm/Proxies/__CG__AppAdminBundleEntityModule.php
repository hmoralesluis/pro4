<?php

namespace Proxies\__CG__\App\AdminBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Module extends \App\AdminBundle\Entity\Module implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'id', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'name', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'optionPath', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'description', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'longDescription', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'cost', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'activeDays', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'onBody', 'userModule', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'products');
        }

        return array('__isInitialized__', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'id', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'name', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'optionPath', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'description', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'longDescription', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'cost', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'activeDays', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'onBody', 'userModule', '' . "\0" . 'App\\AdminBundle\\Entity\\Module' . "\0" . 'products');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Module $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function setCost($cost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCost', array($cost));

        return parent::setCost($cost);
    }

    /**
     * {@inheritDoc}
     */
    public function getCost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCost', array());

        return parent::getCost();
    }

    /**
     * {@inheritDoc}
     */
    public function setActiveDays($activeDays)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActiveDays', array($activeDays));

        return parent::setActiveDays($activeDays);
    }

    /**
     * {@inheritDoc}
     */
    public function getActiveDays()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActiveDays', array());

        return parent::getActiveDays();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserModule(\App\AdminBundle\Entity\UserModule $userModule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserModule', array($userModule));

        return parent::addUserModule($userModule);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserModule(\App\AdminBundle\Entity\UserModule $userModule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserModule', array($userModule));

        return parent::removeUserModule($userModule);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserModule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserModule', array());

        return parent::getUserModule();
    }

    /**
     * {@inheritDoc}
     */
    public function addProduct(\App\AdminBundle\Entity\Product $product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduct', array($product));

        return parent::addProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProduct(\App\AdminBundle\Entity\Product $product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProduct', array($product));

        return parent::removeProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProducts', array());

        return parent::getProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function isOnBody()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isOnBody', array());

        return parent::isOnBody();
    }

    /**
     * {@inheritDoc}
     */
    public function setOnBody($onBody)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOnBody', array($onBody));

        return parent::setOnBody($onBody);
    }

    /**
     * {@inheritDoc}
     */
    public function getOptionPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptionPath', array());

        return parent::getOptionPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptionPath($optionPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptionPath', array($optionPath));

        return parent::setOptionPath($optionPath);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongDescription($longDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongDescription', array($longDescription));

        return parent::setLongDescription($longDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongDescription', array());

        return parent::getLongDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getOnBody()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOnBody', array());

        return parent::getOnBody();
    }

}
