<?php

namespace App\AdminBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TransactionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TransactionRepository extends EntityRepository
{
    public function findDailyTransaction($id)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT t FROM AdminBundle:Transaction t JOIN t.user u WHERE u.id = :id AND (t.date BETWEEN :yesterday AND :today)";
        $query = $em->createQuery($dql);
        $query->setParameters(array('id' => $id, 'today' => date_create_from_format('Y-m-d', date('Y-m-d')), 'yesterday' => date_create_from_format('Y-m-d', date('Y-m-d', strtotime('-1 day')))));
        return $query->getResult();
    }

    public function findWeeklyTransaction($id)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT t FROM AdminBundle:Transaction t JOIN t.user u WHERE u.id = :id AND (t.date BETWEEN :thisWeek AND :today)";
        $query = $em->createQuery($dql);
        $query->setParameters(array('id' => $id, 'today' => date_create_from_format('Y-m-d', date('Y-m-d')), 'thisWeek' => date_create_from_format('Y-m-d', date('Y-m-d', strtotime('-1 week')))));
        return $query->getResult();
    }

    public function findMonthlyTransaction($id)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT t FROM AdminBundle:Transaction t JOIN t.user u WHERE u.id = :id AND (t.date BETWEEN :thisMonth AND :today)";
        $query = $em->createQuery($dql);
        $query->setParameters(array('id' => $id, 'today' => date_create_from_format('Y-m-d', date('Y-m-d')), 'thisMonth' => date_create_from_format('Y-m-d', date('Y-m-d', strtotime('-1 month')))));
        return $query->getResult();
    }

    public function findQuarterlyTransaction($id)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT t FROM AdminBundle:Transaction t JOIN t.user u WHERE u.id = :id AND (t.date BETWEEN :quarterly AND :today)";
        $query = $em->createQuery($dql);
        $query->setParameters(array('id' => $id, 'today' => date_create_from_format('Y-m-d', date('Y-m-d')), 'quarterly' => date_create_from_format('Y-m-d', date('Y-m-d', strtotime('-3 month')))));
        return $query->getResult();
    }

    public function findYearlyTransaction($id)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT t FROM AdminBundle:Transaction t JOIN t.user u WHERE u.id = :id AND (t.date BETWEEN :yearly AND :today)";
        $query = $em->createQuery($dql);
        $query->setParameters(array('id' => $id, 'today' => date_create_from_format('Y-m-d', date('Y-m-d')), 'yearly' => date_create_from_format('Y-m-d', date('Y-m-d', strtotime('-1 year')))));
        return $query->getResult();
    }
}
