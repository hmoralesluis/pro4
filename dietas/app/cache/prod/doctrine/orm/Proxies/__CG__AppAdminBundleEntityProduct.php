<?php

namespace Proxies\__CG__\App\AdminBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \App\AdminBundle\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'name', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'count', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'price', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'roles', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'descriptions', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'productType', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'user', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'modules');
        }

        return array('__isInitialized__', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'name', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'count', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'price', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'roles', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'descriptions', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'productType', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'user', '' . "\0" . 'App\\AdminBundle\\Entity\\Product' . "\0" . 'modules');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCount($count)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCount', array($count));

        return parent::setCount($count);
    }

    /**
     * {@inheritDoc}
     */
    public function getCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCount', array());

        return parent::getCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\App\AdminBundle\Entity\Role $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', array($roles));

        return parent::addRole($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole(\App\AdminBundle\Entity\Role $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', array($roles));

        return parent::removeRole($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function addDescription(\App\AdminBundle\Entity\Description $description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDescription', array($description));

        return parent::addDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDescription(\App\AdminBundle\Entity\Description $description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDescription', array($description));

        return parent::removeDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptions', array());

        return parent::getDescriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductType(\App\AdminBundle\Entity\ProductType $productType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductType', array($productType));

        return parent::setProductType($productType);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductType', array());

        return parent::getProductType();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\App\AdminBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addModule(\App\AdminBundle\Entity\Module $module)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addModule', array($module));

        return parent::addModule($module);
    }

    /**
     * {@inheritDoc}
     */
    public function removeModule(\App\AdminBundle\Entity\Module $module)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeModule', array($module));

        return parent::removeModule($module);
    }

    /**
     * {@inheritDoc}
     */
    public function getModules()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModules', array());

        return parent::getModules();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
