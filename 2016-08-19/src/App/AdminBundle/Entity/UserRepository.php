<?php

namespace App\AdminBundle\Entity;

use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository implements UserProviderInterface
{
    public function loadUserByUsername($username)
    {
        $user = $this->createQueryBuilder('u')
            ->where('u.username = :username OR u.email = :email')
            ->setParameter('username', $username)
            ->setParameter('email', $username)
            ->getQuery()
            ->getOneOrNullResult();
        if (null === $user) {
            $message = sprintf(
                'Unable to find an active admin AdminBundle:User object identified by "%s".',
                $username
            );
            throw new UsernameNotFoundException($message);
        }
        return $user;
    }

    /**
     * @param UserInterface $user
     * @return null|object
     * @throws UnsupportedUserException
     */
    public function refreshUser(UserInterface $user)
    {
        $class = get_class($user);
        if (!$this->supportsClass($class)) {
            throw new UnsupportedUserException(
                sprintf(
                    'Instances of "%s" are not supported.', $class
                )
            );
        }
        return $this->find($user->getId());
    }

    public function supportsClass($class)
    {
        return $this->getEntityName() === $class
        || is_subclass_of($class, $this->getEntityName());
    }

    public function getCountInGeneration($generation)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT COUNT(u.id) FROM AdminBundle:User u WHERE u.generation = :generation";
        $query = $em->createQuery($dql);
        $query->setParameter('generation', $generation);
        return $query->getSingleScalarResult();
    }

    public function findNewUsers($referring)
    {
        $em = $this->getEntityManager();
        $dql = "SELECT u FROM AdminBundle:User u WHERE u.generation > :generation AND u.signUpDate BETWEEN :thisWeek AND :today";
        $query = $em->createQuery($dql);
        $query->setParameters(array('generation' => $referring->getGeneration(), 'today' => date_create_from_format('Y-m-d', date('Y-m-d')), 'thisWeek' => date_create_from_format('Y-m-d', date('Y-m-d', strtotime('-1 week')))));
        return $query->getResult();
    }

}
